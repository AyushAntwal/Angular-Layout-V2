// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $layoutV2-primary: mat.define-palette(mat.$indigo-palette);
// $layoutV2-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $layoutV2-warn: mat.define-palette(mat.$red-palette);

// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $layoutV2-theme: mat.define-light-theme((color: (primary: $layoutV2-primary,
//                 accent: $layoutV2-accent,
//                 warn: $layoutV2-warn,
//             ),
//             typography: mat.define-typography-config(),
//             density: 0));

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.


// Define a dark theme
$dark-theme: mat.define-dark-theme((color: (primary: mat.define-palette(mat.$blue-palette),
                secondary: mat.define-palette(mat.$blue-grey-palette),
                accent: mat.define-palette(mat.$amber-palette),
                warn: mat.define-palette(mat.$red-palette),
            ),
            // Only include `typography` and `density` in the default dark theme.
            typography: mat.define-typography-config(),
            density: 0,
        ));

// Define a light theme
$light-theme: mat.define-light-theme((color: (primary: mat.define-palette(mat.$indigo-palette),
                secondary: mat.define-palette(mat.$pink-palette),
                accent: mat.define-palette(mat.$amber-palette),
                warn: mat.define-palette(mat.$red-palette),
            ),
            // typography: mat.define-typography-config(),
            density: 0,
        ));

// // Apply the dark theme by default
// @include mat.core-theme($dark-theme);
// @include mat.button-theme($dark-theme);
@include mat.all-component-themes($dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // // typography and density styles.
    // @include mat.core-color($light-theme);
    // @include mat.button-color($light-theme);
    @include mat.all-component-themes($light-theme);
}